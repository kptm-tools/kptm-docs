swagger: '2.0'
info:
  version: '1.0'
  title: "kptm-tools"
  description: Core microservice
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: polls.apiblueprint.org
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /api/login:
    x-summary: Login
    post:
      summary: Login to KPTM Tools
      parameters:
        - name: body
          in: body
          description: Hello world
          schema:
            $ref: "#/definitions/LoginRequest"


      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/LoginResponse"
          examples:
            SuccessfulResponse:
            value:
              token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.tGzvRYtktuh_cKZ03H2y0-N0e3at6YxYADAFi65M2o"
              tokenExpirationInstant: 1677686400000
              user:
                active: true
                birthDate: "1990-01-01"
                connectorId: "123e4567-e89b-12d3-a456-426614174000"
                data: {}
                email: "john.doe@example.com"
                firstName: "John"
                fullName: "John Doe"
                id: "00000000-0000-0000-0000-000000000001"
                insertInstant: 1677686400000
                lastLoginInstant: 1677686400000
                lastName: "Doe"
                lastUpdateInstant: 1677686400000
                memberships: []
                passwordChangeRequired: false
                passwordLastUpdateInstant: 1677686400000
                preferredLanguages: []
                registrations: []
                tenantId: "123e4567-e89b-12d3-a456-426614174001"
                twoFactor:
                  methods: []
                  recoveryCodes: []
                usernameStatus: "ACTIVE"
                verified: true
                verifiedInstant: 1677686400000
        400:
          description: Bad Request with error details
          schema:
            $ref: "#/definitions/APIError"
          examples:
            BadRequestResponse:
            value:
              error: "You must specify the [password] property"
            
        404:
          description: The resource was not found
          examples:
            NotFoundResponse:
              value:
              
  /api/forgot-password:
    x-summary: Reset-Password
    post:
      summary: Reset the password given an email and applicationId. This will send an email with a given code that will be used to change password.
      parameters:
        - name: body
          in: body
          description: Fields required to reset password
          schema:
            $ref: "#/definitions/ForgotPasswordRequest"


      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ForgotPasswordResponse"
          examples:
            SuccessfulResponse:
              value:
                statusCode: 200
                change_password_id: "XjylEgEUH3pFzSrt1JSxx4GYmD3ZvKfff6y3n2iUxqc"
  /api/change-password:
    x-summary: Change-Password
    post:
      summary: Given the change_password_id, we can do a change of the password
      parameters:
        - name: body
          in: body
          description: Fields required to change password
          schema:
            $ref: "#/definitions/ChangePasswordRequest"


      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ChangePasswordResponse"
          examples:
            SuccessfulResponse:
              value:
                statusCode: 200
                change_password_id: "XjylEgEUH3pFzSrt1JSxx4GYmD3ZvKfff6y3n2iUxqc"
  /api/tenants:
    x-summary: Tenants collection
    post:
      summary: Register a new Tenant
      parameters:
        - name: body
          in: body
          description: Takes in a name for the desired tenant
          schema: 
            $ref: "#/definitions/RegisterTenantRequest"
          required: true
        
      responses:
        201:
          description: Successful Response containing login credentials for an initial user
          schema:
            $ref: "#/definitions/RegisterTenantResponse"
          examples:
            SuccessfulResponse:
            value:
              application_id: "95f5c37a-a4c7-4399-8c87-0e8984ed6e53"
              user:
                id: "e47b86c1-4ff5-4dc1-8821-28879244cdfe"
                email: "operator@example.com"
                password: "20dfa07f-caa3-4433-b7b4-8d1d5ad19636"
                application_id: "95f5c37a-a4c7-4399-8c87-0e8984ed6e53"
                roles: ["operator"]
              
        400:
          description: Bad Request with error details
          schema:
            $ref: "#/definitions/APIError"
          examples:
            BadRequestResponse:
            value:
              error: "Request body contains unknown field: \"name\""
  /api/users:
    x-summary: Registration of a user
    post:
      summary: Creates a user
      parameters:
        - name: body
          in: body
          description: Data required to create a user
          schema: 
            $ref: "#/definitions/RegisterUserRequest"
          required: true
      responses:
        200:
          description: Successful Response containing user data and verificationId that is used to verify email
          schema:
            $ref: "#/definitions/DomainUser"
  /api/users/{userID}:
    x-summary: User endpoints given a userID
    post:
      summary: Get a Domain User
      parameters:
        - name: userID
          in: path
          type: string
          required: true
          description: The UUID of the user to get

      responses:
        200:
          description: Successful Response containing user data
          schema:
            $ref: "#/definitions/DomainUser"
          examples:
            SuccessfulResponse:
            value:
                id: "e47b86c1-4ff5-4dc1-8821-28879244cdfe"
                email: "operator@example.com"
                password: "20dfa07f-caa3-4433-b7b4-8d1d5ad19636"
                application_id: "95f5c37a-a4c7-4399-8c87-0e8984ed6e53"
                roles: ["operator"]
              
        400:
          description: Bad Request with error details
          schema:
            $ref: "#/definitions/APIError"
          examples:
            BadRequestResponse:
            value:
              error: "Invalid uuid: \"5\""    
  /api/users/{userID}/verify-email:  
    x-summary: User's collection
    post:
      summary: Verify email of user 
      parameters:
        - name: userID
          in: path
          type: string
          required: true
          description: The UUID of the user to get
        - name: body
          in: body
          description: Data required to verify email
          schema: 
            $ref: "#/definitions/VerifyEmailRequest"
          required: true
          
      responses:
        200:
          description: Successful Response containing user data
          schema:
            type: object
            properties: 
              statusCode:
                type: number
              
        400:
          description: Bad Request with error details
          schema:
            $ref: "#/definitions/APIError"
          examples:
            BadRequestResponse:
            value:
              error: "Invalid uuid: \"5\"" 
  /api/hosts:
    x-summary: Host collection
    post:
      summary: Register a host
      parameters:
        - name: body
          in: body
          description: Data for Host request 
          schema: 
            $ref: "#/definitions/HostRequest"
          required: true

          
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/HostResponse"

            
    get:
      summary: Obtains all hosts of a tenant
      
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: "#/definitions/HostResponse"
            
   
  /api/hosts/{hostID}:
    x-summary: Host endpoints given a hostID 
    get:
      summary: Get a host
      parameters:
        - name: hostID
          in: path
          description: Id of host
          type: string
          x-example: "1"
          required: true
        
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/HostResponse"
    patch:
      summary: Modify a host
      parameters:
        - name: hostID
          in: path
          description: Id of host
          type: string
          x-example: "1"
          required: true
        - name: body
          in: body
          schema: 
            $ref: "#/definitions/HostRequest"
        
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done
    delete:
      summary: Delete a host
      parameters:
        - name: hostID
          in: path
          description: Id of host
          type: string
          x-example: "1"
          required: true
        
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              deleted:
                type: boolean
            
  /api/hosts/validate:
    x-summary: Validate host that can be IP or domain
    post:
      summary: Validate host
      parameters:
        - name: body
          in: body
          schema: 
            type: object
            properties:
              value:
                type: string
          required: true
       
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: verified
  /scanner:
    x-summary: Operations related to scanning
    get:
      summary: Obtains all scannings done by the user
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ScanGeneralResponse"
    post: 
      summary: Create a scanning for a given set of targets and outputs an id of the scanning
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
        - name: body
          in: body
          description: Body where is specified the list of id targets and possible schedule 
          required: true
          schema:
            $ref: "#/definitions/ScanRequest"
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              id: 
                type: string
  /scanner/{id}:
    x-summary: Operations related to specific scanning
    patch:
      summary: Add comments in the result of scanning
      parameters:
        - name: id
          in: path
          description: Id of scannig
          type: string
          x-example: "1"
          required: true
        - name: body
          in: body
          description: Contains the DTO Request for adding comments
          required: true
          schema:
            $ref: "#/definitions/ScanPatchRequest"
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done
    
    delete:
      summary: Delete scan
      parameters:
        - name: id
          in: path
          description: Id of scannig
          type: string
          x-example: "1"
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done  
  /scanner/{id}/per-tool:
    x-summary: Path for analist
    get:
      summary: Obtains results of a given scanning
      parameters:
        - name: id
          in: path
          description: Id of scannig
          type: string
          x-example: "1"
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ScannerResponse"

  /scanner/{id}/aggregated:
    x-summary: Path for Client
    get:
      summary: Obtains results of a given scanning
      parameters:
        - name: id
          in: path
          description: Id of scannig
          type: string
          x-example: "1"
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ScannerSimpleResponse"
  /reports:
    x-summary: Generate reports for user
    post:
      summary: Return a report of findings obtained from the vulnerabilities and gathered information
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
        - name: body
          in: body
          description: Contains the periodicity of the request
          required: true
          schema:
            $ref: "#/definitions/ReportRequest"
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: http://bucket/file
    
definitions:

  APIError:
    type: object
    properties:
      error:  
        type: string
        description: Detailed error information.

  UserRequest:
    title: Information from user
    type: object
    properties:
      documentIdentifier:
        type: string
      name:
        type: string
      roleId:
        type: string
      notificationURL:
        type: string
      notificationEmail:
        type: string
    required:
      - documentIdentifier
      - name
      - roleId

  LoginRequest:
    title: Login Request
    type: object
    properties:
      loginId: 
        type: string
      password:
        type: string
      applicationId:
        type: string
      
  LoginResponse:
    title: Login Response
    type: object
    properties:
      token:
        type: string
        description: The access token used for authentication.
      tokenExpirationInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the access token expires.
      user:
        $ref: '#/definitions/User'
        
  RegisterUserRequest:
    title: Register User Request
    type: object
    properties:
      firstname: 
        type: string
      lastname:
        type: string
      email:
        type: string
      password:
        type: string
      roles:
        type: array
        items:
          type: string
      application_id:
        type: string
  RegisterUserResponse:
    title: Register User Response
    type: object
    properties:
      verification_id:
        type: string
  VerifyEmailRequest:
    title: Verify Email Request
    type: object
    properties:
      verification_id: 
        type: string
  ForgotPasswordRequest:
    title: Forgot password Request
    type: object
    properties:
      login_id: 
        type: string
      application_id:
        type: string
  ForgotPasswordResponse:
    title: Forgot password Response
    type: object
    properties:
      statusCode: 
        type: number
      change_password_id:
        type: string
        
  ChangePasswordRequest:
    title: Change password Request
    type: object
    properties:
      login_id: 
        type: string
      password: 
        type: string
      change_password_id: 
        type: string
      application_id:
        type: string
    
  ChangePasswordResponse:
    title: Change password Response
    type: object
    properties:
      statusCode: 
        type: number
      data:
        type: string
  RegisterTenantRequest:
    title: Register Tenant Request
    type: object
    properties:
      name:
        type: string
        
  RegisterTenantResponse:
    title: Register Tenant Response
    type: object
    properties:
      applicationId:
        type: string
        description: The applicationId of the application associated to the new tenant
      user:
        $ref: '#/definitions/DomainUser'
        
  DomainUser:
    type: object
    properties:
      id:
        type: string
        description: The user's fusionauth uuid
      email:
        type: string
        description: The user's email address
      password:
        type: string
        description: The user's password
      application_id:
        type: string
        description: The uuid of the application associated to the user
      roles:
        type: array
        description: The user's roles
        items:
          type: string

  User:
    type: object
    properties:
      active:
        type: boolean
        description: Whether the user account is active.
      birthDate:
        type: string
        format: date
        description: The user's birth date.
      connectorId:
        type: string
        description: Unique identifier for a connector associated with the user.
      data:
        type: object
        description: Additional user data specific to the application.
      email:
        type: string
        description: The user's email address.
      firstName:
        type: string
        description: The user's first name.
      fullName:
        type: string
        description: The user's full name.
      id:
        type: string
        description: Unique identifier for the user.
      insertInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user record was created.
      lastLoginInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user last logged in.
      lastName:
        type: string
        description: The user's last name.
      lastUpdateInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user record was last updated.
      memberships:
        type: array
        items:
          type: object
          # Omit nested object definition for memberships (optional)
      passwordChangeRequired:
        type: boolean
        description: Whether the user needs to change their password.
      passwordLastUpdateInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user's password was last updated.
      preferredLanguages:
        type: array
        items:
          type: string
          # Omit nested definition for preferred languages (optional)
      registrations:
        type: array
        items:
          type: object
          properties:
            applicationId:
              type: string
              description: Unique identifier for the application the user is registered to.
            data:
              type: object
              description: Additional registration data specific to the application.
            id:
              type: string
              description: Unique identifier for the user registration.
            insertInstant:
              type: integer
              format: int64
              description: The timestamp (in milliseconds) when the user registration was created.
            lastLoginInstant:
              type: integer
              format: int64
              description: The timestamp (in milliseconds) when the user last logged in for this application.
            lastUpdateInstant:
              type: integer
              format: int64
              description: The timestamp (in milliseconds) when the user registration was last updated.
            preferredLanguages:
              type: array
              items:
                type: string
                # Omit nested definition for preferred languages (optional)
            roles:
              type: array
              items:
                type: string
                description: The user's roles within the application.
            tokens:
              type: object
              # Omit nested object definition for tokens (optional)
            usernameStatus:
              type: string
              description: The status of the user's username (e.g., ACTIVE, INACTIVE).
            verified:
              type: boolean
              description: Whether the user's email address has been verified.
            verifiedInstant:
              type: integer
              format: int64
              description: The timestamp (in milliseconds) when the user's email address was verified.
      tenantId:
        type: string
        description: Unique identifier for the tenant the user belongs to.
      twoFactor:
        type: object
        properties:
          methods:
            type: array
            items:
              type: string
              # Omit nested definition for two-factor methods (optional)
          recoveryCodes:
            type: array
            items:
              type: string
              # Omit nested definition for recovery codes (optional)
      usernameStatus:
        type: string
        description: The status of the user's username (e.g., ACTIVE, INACTIVE).
      verified:
        type: boolean
        description: Whether the user's email address has been verified.
      verifiedInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user's email address was verified.
            
  
  ValidateResponse:
    title: Validation of Target Response
    type: object
    properties:
      isValid: 
        type: boolean
        example: true
      reason:
        type: string
        example: It appears in DNS
  ReportRequest:
    title: Report Request
    type: object
    properties:
      period:
        type: string
      scans:
        type: array
        items:
          type: string
  
  ScanPatchRequest:
    title: Request for Scan Patch
    type: object
    properties:
      commentGeneral: 
        type: string
      comments:
        type: array
        items:
          type: object
          properties:
            toolId: 
              type: string
            comment:
              type: string
  ScannerSimpleResponse:
    title: Scanner Simple Response DTO
    type: object
    properties:
      osData:
        type: object
        properties:
          version:
            type: string
          vulnerability:
            type: string
      portData:
        type: object
        properties:
          portNumber:
            type: string
          vulnerability:
            type: string
          
  ScannerResponse:
    title: Scanner Response DTO
    type: object
    properties:
      tool:
        type: string
      failure: 
        type: string
      failuresDetail:
        type: array
        items:
          type: object
          properties:
            vulnerabilityName:
              type: string
            severity:
              type: string
            description:
              type: string
            affectedAsset:
              type: string
            additionalReference:
              type: string
  ScanRequest:
    title: Scan
    type: object
    properties:
      host_ids:
        type: array
        items:
          type: string
  ScanGeneralResponse:
    title: Scan General Response
    type: array
    items:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        dateStart:
          type: string
        dateFinishScan:
          type: string
        commentGeneral:
          type: string
        numberVulnerabilities:
          type: number
  WhoisInfo:
    type: object
    properties:
      domain:
        $ref: '#/definitions/Domain'
      registrar:
        $ref: '#/definitions/Contact'
      registrant:
        $ref: '#/definitions/Contact'
      administrative:
        $ref: '#/definitions/Contact'
      technical:
        $ref: '#/definitions/Contact'
      billing:
        $ref: '#/definitions/Contact'
    # No required array means all properties are optional

  Domain:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier of the domain.
      domain:
        type: string
        description: The domain name.
      punycode:
        type: string
        description: The punycode representation of the domain name.
      name:
        type: string
        description: The name of the domain.
      extension:
        type: string
        description: The domain extension (e.g., .com, .org).
      whois_server:
        type: string
        description: The Whois server for the domain.
      status:
        type: array
        items:
          type: string
        description: The status of the domain.
      name_servers:
        type: array
        items:
          type: string
        description: The nameservers associated with the domain.
      dnssec:
        type: boolean
        description: Indicates if the domain has DNSSEC enabled.
      created_date:
        type: string
        format: date-time
        description: The date the domain was created.
      created_date_in_time:
        type: string
        format: date-time
        description: The creation date as a `time.Time` object.
      updated_date:
        type: string
        format: date-time
        description: The last update date of the domain.
      updated_date_in_time:
        type: string
        format: date-time
        description: The last update date as a `time.Time` object.
      expiration_date:
        type: string
        format: date-time
        description: The expiration date of the domain.
      expiration_date_in_time:
        type: string
        format: date-time
        description: The expiration date as a `time.Time` object.

  Contact:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for the contact.
      name:
        type: string
        description: The name of the contact.
      organization:
        type: string
        description: The organization associated with the contact.
      street:
        type: string
        description: The street address of the contact.
      city:
        type: string
        description: The city of the contact.
      province:
        type: string
        description: The province or state of the contact.
      postal_code:
        type: string
        description: The postal code of the contact.
      country:
        type: string
        description: The country of the contact.
      phone:
        type: string
        description: The contact's phone number.
      phone_ext:
        type: string
        description: The phone extension, if any.
      fax:
        type: string
        description: The fax number of the contact.
      fax_ext:
        type: string
        description: The fax extension, if any.
      email:
        type: string
        description: The email address of the contact.
      referral_url:
        type: string
        description: A referral URL associated with the contact.

  WhoIsEventResult:
    type: object
    properties:
      hosts:
        type: array
        items:
          $ref: '#/definitions/WhoisInfo'
        description: A list of Whois information for the hosts.
  
  CredentialHost:
    type: object
    properties:
      id:
        type: string
      host_id:
        type: string
      username:
        type: string
      password:
        type: string
  RapporteurHost:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      is_principal:
        type: boolean
  HostRequest:
    type: object
    properties:
      alias: 
        type: string
      host:
        type: string
      credentials:
        type: array
        items:
           $ref: '#/definitions/CredentialHost'
      rapporteurs:
        type: array
        items:
           $ref: '#/definitions/RapporteurHost'
  HostResponse:
    type: object
    properties:
      id:
        type: string
      
      updated_at:
        type: string
      created_at: 
        type: string
      name: 
        type: string
      domain:
        type: string
      ip:
        type: string
      credentials:
        type: array
        items:
           $ref: '#/definitions/CredentialHost'
      rapporteurs:
        type: array
        items:
           $ref: '#/definitions/RapporteurHost'