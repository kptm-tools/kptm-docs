swagger: '2.0'
info:
  version: '1.0'
  title: "kptm-tools"
  description: Core microservice
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: polls.apiblueprint.org
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /api/login:
    x-summary: Login
    post:
      summary: Login to KPTM Tools
      tags:
        - Users      
      parameters:
        - name: body
          in: body
          description: Hello world
          schema:
            $ref: "#/definitions/LoginRequest"


      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/LoginResponse"
          examples:
            SuccessfulResponse:
            value:
              token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.tGzvRYtktuh_cKZ03H2y0-N0e3at6YxYADAFi65M2o"
              tokenExpirationInstant: 1677686400000
              user:
                active: true
                birthDate: "1990-01-01"
                connectorId: "123e4567-e89b-12d3-a456-426614174000"
                data: {}
                email: "john.doe@example.com"
                firstName: "John"
                fullName: "John Doe"
                id: "00000000-0000-0000-0000-000000000001"
                insertInstant: 1677686400000
                lastLoginInstant: 1677686400000
                lastName: "Doe"
                lastUpdateInstant: 1677686400000
                memberships: []
                passwordChangeRequired: false
                passwordLastUpdateInstant: 1677686400000
                preferredLanguages: []
                registrations: []
                tenantId: "123e4567-e89b-12d3-a456-426614174001"
                twoFactor:
                  methods: []
                  recoveryCodes: []
                usernameStatus: "ACTIVE"
                verified: true
                verifiedInstant: 1677686400000
        400:
          description: Bad Request with error details
          schema:
            $ref: "#/definitions/APIError"
          examples:
            BadRequestResponse:
            value:
              error: "You must specify the [password] property"
            
        404:
          description: The resource was not found
          examples:
            NotFoundResponse:
              value:
              
  /api/forgot-password:
    x-summary: Reset-Password
    post:
      summary: Reset the password given an email and applicationId. This will send an email with a given code that will be used to change password.
      tags:
        - Users    
      parameters:
        - name: body
          in: body
          description: Fields required to reset password
          schema:
            $ref: "#/definitions/ForgotPasswordRequest"


      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ForgotPasswordResponse"
          examples:
            SuccessfulResponse:
              value:
                statusCode: 200
                change_password_id: "XjylEgEUH3pFzSrt1JSxx4GYmD3ZvKfff6y3n2iUxqc"
  /api/change-password:
    x-summary: Change-Password
    post:
      summary: Given the change_password_id, we can do a change of the password
      tags:
        - Users
      parameters:
        - name: body
          in: body
          description: Fields required to change password
          schema:
            $ref: "#/definitions/ChangePasswordRequest"


      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ChangePasswordResponse"
          examples:
            SuccessfulResponse:
              value:
                statusCode: 200
                change_password_id: "XjylEgEUH3pFzSrt1JSxx4GYmD3ZvKfff6y3n2iUxqc"
  /api/tenants:
    x-summary: Tenants collection
    post:
      summary: Register a new Tenant
      tags:
        - Tenants
      parameters:
        - name: body
          in: body
          description: Takes in a name for the desired tenant
          schema: 
            $ref: "#/definitions/RegisterTenantRequest"
          required: true
        
      responses:
        201:
          description: Successful Response containing login credentials for an initial user
          schema:
            $ref: "#/definitions/RegisterTenantResponse"
          examples:
            SuccessfulResponse:
            value:
              application_id: "95f5c37a-a4c7-4399-8c87-0e8984ed6e53"
              user:
                id: "e47b86c1-4ff5-4dc1-8821-28879244cdfe"
                email: "operator@example.com"
                password: "20dfa07f-caa3-4433-b7b4-8d1d5ad19636"
                application_id: "95f5c37a-a4c7-4399-8c87-0e8984ed6e53"
                roles: ["operator"]
              
        400:
          description: Bad Request with error details
          schema:
            $ref: "#/definitions/APIError"
          examples:
            BadRequestResponse:
            value:
              error: "Request body contains unknown field: \"name\""
  /api/users:
    x-summary: Registration of a user
    post:
      tags:
        - Users
      summary: Creates a user
      parameters:
        - name: body
          in: body
          description: Data required to create a user
          schema: 
            $ref: "#/definitions/RegisterUserRequest"
          required: true
      responses:
        200:
          description: Successful Response containing user data and verificationId that is used to verify email
          schema:
            $ref: "#/definitions/DomainUser"
  /api/users/{userID}:
    x-summary: User endpoints given a userID
    post:
      summary: Get a Domain User
      tags:
        - Users
      parameters:
        - name: userID
          in: path
          type: string
          required: true
          description: The UUID of the user to get

      responses:
        200:
          description: Successful Response containing user data
          schema:
            $ref: "#/definitions/DomainUser"
          examples:
            SuccessfulResponse:
            value:
                id: "e47b86c1-4ff5-4dc1-8821-28879244cdfe"
                email: "operator@example.com"
                password: "20dfa07f-caa3-4433-b7b4-8d1d5ad19636"
                application_id: "95f5c37a-a4c7-4399-8c87-0e8984ed6e53"
                roles: ["operator"]
              
        400:
          description: Bad Request with error details
          schema:
            $ref: "#/definitions/APIError"
          examples:
            BadRequestResponse:
            value:
              error: "Invalid uuid: \"5\""    
  /api/users/{userID}/verify-email:  
    x-summary: User's collection
    post:
      summary: Verify email of user 
      tags:
        - Users
      parameters:
        - name: userID
          in: path
          type: string
          required: true
          description: The UUID of the user to get
        - name: body
          in: body
          description: Data required to verify email
          schema: 
            $ref: "#/definitions/VerifyEmailRequest"
          required: true
          
      responses:
        200:
          description: Successful Response containing user data
          schema:
            type: object
            properties: 
              statusCode:
                type: number
              
        400:
          description: Bad Request with error details
          schema:
            $ref: "#/definitions/APIError"
          examples:
            BadRequestResponse:
            value:
              error: "Invalid uuid: \"5\"" 
  /api/hosts:
    x-summary: Host collection
    post:
      summary: Register a host
      tags:
        - Hosts
      parameters:
        - name: body
          in: body
          description: Data for Host request 
          schema: 
            $ref: "#/definitions/HostRequest"
          required: true

          
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/HostResponse"

            
    get:
      summary: Obtains all hosts of a tenant
      tags:
        - Hosts
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: "#/definitions/HostResponse"
            
   
  /api/hosts/{hostID}:
    x-summary: Host endpoints given a hostID 
    get:
      summary: Get a host
      tags:
        - Hosts
      parameters:
        - name: hostID
          in: path
          description: Id of host
          type: string
          x-example: "1"
          required: true
        
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/HostResponse"
    patch:
      summary: Modify a host
      tags:
        - Hosts      
      parameters:
        - name: hostID
          in: path
          description: Id of host
          type: string
          x-example: "1"
          required: true
        - name: body
          in: body
          schema: 
            $ref: "#/definitions/HostRequestPut"
        
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done
    delete:
      summary: Delete a host
      tags:
        - Hosts      
      parameters:
        - name: hostID
          in: path
          description: Id of host
          type: string
          x-example: "1"
          required: true
        
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              deleted:
                type: boolean
            
  /api/hosts/validate-host:
    x-summary: Validate host that can be IP or domain
    post:
      summary: Validate host
      tags:
        - Hosts
      parameters:
        - name: body
          in: body
          schema: 
            type: object
            properties:
              value:
                type: string
          required: true
       
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: verified
  /api/hosts/validate-alias:
    x-summary: Validate alias
    post:
      summary: Validate name of the host to not be repeated
      tags:
        - Hosts
      parameters:
        - name: body
          in: body
          schema: 
            type: object
            properties:
              hostname:
                type: string
          required: true
       
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: verified
  /api/scans:
    x-summary: Operations related to scanning
    get:
      summary: Retreives a list of all scans performed for said tenant, with detailed scan summary information.
      description: This endpoint provides an overview of all scans completed by the user. It includes details such as the scan's ID, date, host, the number of vulnerabilities detected, severity counts, scan duration, and the status of each scan.
      tags:
        - Scans
      parameters:
        - name: Authorization
          in: header
          description: An authorization header containing the Bearer token to authenticate the user.
          required: true
          type: string
      responses:
        200:
          description: A list of all scans performed within the tenant, containing detailed scan summary information.
          schema:
            type: array
            items:
              $ref: "#/definitions/ScanSummary"
    post: 
      summary: Create a scanning for a given hostID
      tags:
        - Scans
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
        - name: body
          in: body
          description: Body where is specified the list of id targets and possible schedule 
          required: true
          schema:
            $ref: "#/definitions/ScanRequest"
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ScanResponseCreation"
            
  /api/scans/{id}:
    x-summary: Operations related to specific scanning
    patch:
      summary: Add comments in the result of scanning
      tags:
        - Scans
      parameters:
        - name: id
          in: path
          description: Id of scannig
          type: string
          x-example: "1"
          required: true
        - name: body
          in: body
          description: Contains the DTO Request for adding comments
          required: true
          schema:
            $ref: "#/definitions/ScanPatchRequest"
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done
    
    delete:
      summary: Delete scan
      tags:
        - Scans
      parameters:
        - name: id
          in: path
          description: Id of scannig
          type: string
          x-example: "1"
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done  
  /api/scans/{id}/insights:
    x-summary: Insights of a scan
    get:
      summary: Retrieve the insights of the a given vulnerability scan, including severity counts, total vulnerabilities, variation since the last scan, protection score, and metadata."
      tags:
        - Scans
      parameters:
        - name: id
          in: path
          description: Id of the scan
          type: string
          x-example: "e7991601-e3ea-4d7f-846d-1546e1d129dd"
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful response with vulnerability scan results.
          schema:
            $ref: "#/definitions/ScanInsights"
  /api/scans/{id}/cancel:
    x-summary: Cancel a scan
    post:
      summary: Cancel a scan which is currently in progress.
      tags:
        - Scans
      parameters:
        - name: id
          in: path
          description: Id of the scan
          type: string
          x-example: "e7991601-e3ea-4d7f-846d-1546e1d129dd"
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful response.
        409:
          description: The scan couldn't be cancelled because it has already finished.
          schema:
            $ref: "#/definitions/APIError"
          examples:
            ConflictResponse:
            value:
              error: "scan e4fc3f0d-6363-4cae-90e1-fcadc66c5192 has already finished with status Cancelled"
        500:
          description: The server encountered an internal error.
          schema:
            $ref: "#/definitions/APIError"
  /api/scorecard-trends:
    get:
      summary: Get the scorecard trends
      tags:
        - Scans
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string      
      responses:
        200:
          description: Successful response with the scorecard trends of all hosts associated to the tenant.
          schema:
            type: array
            items: 
              $ref: '#/definitions/ScoreCardTrendResponse'
          
  /api/scans/{id}/vulnerabilities/summary:
    x-summary: Summary of a scan's vulnerabilities
    get: 
      summary: Get the summary of a scan's detected vulnerabilities.
      tags:
        - Reports
      parameters:
        - name: id
          in: path
          description: Id of the scan
          type: string
          x-example: "e7991601-e3ea-4d7f-846d-1546e1d129dd"
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
        - name: severity
          in: query
          description: Comma-separated list of severity levels to filter by (Critical, High, Medium, Low). If not provided, all severities are included.
          required: false
          type: string
          x-example: "High,Critical"
        - name: time_range
          in: query
          description: Time range for vulnerability trends (Month, Quarter, Semester). Default is Month.
          required: false
          type: string
          enum:
            - Month
            - Quarter
            - Semester
          default: Month
      responses:
        200:
          description: Successful response with a summary of the scan's vulnerabilities.
          schema:
            $ref: '#/definitions/ScanVulnerabilitySummaryResponse'
        400:
          description: Bad Request - Invalid input, e.g., invalid scan ID or severity filter.
          schema:
            $ref: '#/definitions/APIError'
        404:
          description: Not Found - Scan with the given ID not found.
          schema:
            $ref: '#/definitions/APIError'
        500:
          description: Internal Server Error - Something went wrong on the server.
          schema:
            $ref: '#/definitions/APIError'
  
  /api/scan-schedules:
    x-summary: Operations related to scan schedule
    get:
      summary: Retreives a list of all scan schedules 
      tags:
        - ScanSchedules
      parameters:
        - name: Authorization
          in: header
          description: An authorization header containing the Bearer token to authenticate the user.
          required: true
          type: string
      responses:
        200:
          description: A list of all scan schedules.
          schema:
            type: array
            items:
              $ref: "#/definitions/ScanScheduleResponse"
  
  /api/scan-schedules/{id}:
    x-summary: Operations related to specific scan scheduling
    patch:
      summary: Edit scan scheduling of specific record
      tags:
        - ScanSchedules
      parameters:
        - name: id
          in: path
          description: Id of scan schedule
          type: string
          x-example: "1"
          required: true
        - name: body
          in: body
          description: Contains the DTO Request for editing scan scheduling
          required: true
          schema:
            $ref: "#/definitions/ScanSchedulePatchRequest"
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done
    
    delete:
      summary: Delete scan schedule
      tags:
        - ScanSchedules
      parameters:
        - name: id
          in: path
          description: Id of scan schedule
          type: string
          x-example: "1"
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done  
            
  /api/reports:
    get:
      summary: Get all reports associated to the authenticated tenant
      description: Retrieves a list of reports associated with the currently authenticated user's tenant. Reports are summarized with domain, IP, scan date, total severities, and comment status. 
      tags: 
        - Reports
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response - returns a list of reports
          schema:
            type: array
            items:
              $ref: '#/definitions/ReportResponse'
        401:
          description: Unauthorized - Authentication required
          schema:
            type: array
            items:
              $ref: '#/definitions/APIError'
        500:
          description: Internal Server Error - Something went wrong on the server.
          schema:
            $ref: '#/definitions/APIError'
  
  /api/dashboards:
    x-summary: Dashboard operations
    get:
      summary: Retrieve tenant dashboard data
      description: Retrieves comprehensive dashboard data for a tenant, including overall security posture, vulnerability trends, host severity heat map, and last scan details.
      tags: 
        - Dashboard
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
        - name: host_ids
          in: query
          description: Comma-separated list of host IDs to filter dashboard data.
          required: false
          type: string
          x-example: "1,2,3"
        - name: trends_time_period
          in: query
          description: Time period to filter vulnerability trends.
          required: false
          type: string
          enum:
            - Month
            - Quarter
            - Semester
          default: Month
          x-example: Month
        - name: trends_severity
          in: query
          description: Comma-separated list of severity levels to filter vulnerability trends.
          required: false
          type: string
          x-example: "High,Critical"
      responses:
        200:
          description: Successful response - Returns tenant dashboard data.
          schema: 
            $ref: '#/definitions/TenantDashboardData'
          examples:
            SuccessfulResponse:
              value:
                overall_security_posture:
                  score: 75
                  variation: 5
                host_severity_heat_map: []
                vulnerability_trends: []
                last_scan:
                  host_alias: google.com
                  scan_date: "2024-12-12T00:00:00Z"
                  severity_counts:
                    critical: 10
                    high: 40
                    low: 50
                    medium: 30
                  total_vulnerabilities: 140
                  total_vulnerabilities_variation: 10
                hosts_with_greatest_vulnerabilities: []
        400:
          description: Bad Request - Invalid input, e.g., invalid host_ids, time_period, or severity filter.
          schema:
            $ref: '#/definitions/APIError'
        500:
          description: Internal Server Error - Something went wrong on the server.
          schema:
            $ref: '#/definitions/APIError'

definitions:

  APIError:
    type: object
    properties:
      error:  
        type: string
        description: Detailed error information.

  LoginRequest:
    title: Login Request
    type: object
    properties:
      loginId: 
        type: string
      password:
        type: string
      applicationId:
        type: string
      
  LoginResponse:
    title: Login Response
    type: object
    properties:
      token:
        type: string
        description: The access token used for authentication.
      tokenExpirationInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the access token expires.
      user:
        $ref: '#/definitions/User'
        
  RegisterUserRequest:
    title: Register User Request
    type: object
    properties:
      firstname: 
        type: string
      lastname:
        type: string
      email:
        type: string
      password:
        type: string
      roles:
        type: array
        items:
          type: string
      application_id:
        type: string

  VerifyEmailRequest:
    title: Verify Email Request
    type: object
    properties:
      verification_id: 
        type: string
  ForgotPasswordRequest:
    title: Forgot password Request
    type: object
    properties:
      login_id: 
        type: string
      application_id:
        type: string
  ForgotPasswordResponse:
    title: Forgot password Response
    type: object
    properties:
      statusCode: 
        type: number
      change_password_id:
        type: string
        
  ChangePasswordRequest:
    title: Change password Request
    type: object
    properties:
      login_id: 
        type: string
      password: 
        type: string
      change_password_id: 
        type: string
      application_id:
        type: string
    
  ChangePasswordResponse:
    title: Change password Response
    type: object
    properties:
      statusCode: 
        type: number
      data:
        type: string
  RegisterTenantRequest:
    title: Register Tenant Request
    type: object
    properties:
      name:
        type: string
        
  RegisterTenantResponse:
    title: Register Tenant Response
    type: object
    properties:
      applicationId:
        type: string
        description: The applicationId of the application associated to the new tenant
      user:
        $ref: '#/definitions/DomainUser'
        
  DomainUser:
    type: object
    properties:
      id:
        type: string
        description: The user's fusionauth uuid
      email:
        type: string
        description: The user's email address
      password:
        type: string
        description: The user's password
      application_id:
        type: string
        description: The uuid of the application associated to the user
      roles:
        type: array
        description: The user's roles
        items:
          type: string

  User:
    type: object
    properties:
      active:
        type: boolean
        description: Whether the user account is active.
      birthDate:
        type: string
        format: date
        description: The user's birth date.
      connectorId:
        type: string
        description: Unique identifier for a connector associated with the user.
      data:
        type: object
        description: Additional user data specific to the application.
      email:
        type: string
        description: The user's email address.
      firstName:
        type: string
        description: The user's first name.
      fullName:
        type: string
        description: The user's full name.
      id:
        type: string
        description: Unique identifier for the user.
      insertInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user record was created.
      lastLoginInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user last logged in.
      lastName:
        type: string
        description: The user's last name.
      lastUpdateInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user record was last updated.
      memberships:
        type: array
        items:
          type: object
          # Omit nested object definition for memberships (optional)
      passwordChangeRequired:
        type: boolean
        description: Whether the user needs to change their password.
      passwordLastUpdateInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user's password was last updated.
      preferredLanguages:
        type: array
        items:
          type: string
          # Omit nested definition for preferred languages (optional)
      registrations:
        type: array
        items:
          type: object
          properties:
            applicationId:
              type: string
              description: Unique identifier for the application the user is registered to.
            data:
              type: object
              description: Additional registration data specific to the application.
            id:
              type: string
              description: Unique identifier for the user registration.
            insertInstant:
              type: integer
              format: int64
              description: The timestamp (in milliseconds) when the user registration was created.
            lastLoginInstant:
              type: integer
              format: int64
              description: The timestamp (in milliseconds) when the user last logged in for this application.
            lastUpdateInstant:
              type: integer
              format: int64
              description: The timestamp (in milliseconds) when the user registration was last updated.
            preferredLanguages:
              type: array
              items:
                type: string
                # Omit nested definition for preferred languages (optional)
            roles:
              type: array
              items:
                type: string
                description: The user's roles within the application.
            tokens:
              type: object
              # Omit nested object definition for tokens (optional)
            usernameStatus:
              type: string
              description: The status of the user's username (e.g., ACTIVE, INACTIVE).
            verified:
              type: boolean
              description: Whether the user's email address has been verified.
            verifiedInstant:
              type: integer
              format: int64
              description: The timestamp (in milliseconds) when the user's email address was verified.
      tenantId:
        type: string
        description: Unique identifier for the tenant the user belongs to.
      twoFactor:
        type: object
        properties:
          methods:
            type: array
            items:
              type: string
              # Omit nested definition for two-factor methods (optional)
          recoveryCodes:
            type: array
            items:
              type: string
              # Omit nested definition for recovery codes (optional)
      usernameStatus:
        type: string
        description: The status of the user's username (e.g., ACTIVE, INACTIVE).
      verified:
        type: boolean
        description: Whether the user's email address has been verified.
      verifiedInstant:
        type: integer
        format: int64
        description: The timestamp (in milliseconds) when the user's email address was verified.
            
  
  ReportRequest:
    title: Report Request
    type: object
    properties:
      period:
        type: string
      scans:
        type: array
        items:
          type: string
  
  ScanPatchRequest:
    title: Request for Scan Patch
    type: object
    properties:
      commentGeneral: 
        type: string
      comments:
        type: array
        items:
          type: object
          properties:
            toolId: 
              type: string
            comment:
              type: string
  
  ScanSchedulePatchRequest:
    title: Request for ScanSchedule Patch
    type: object
    properties:
      schedule_at:
        type: string
        description: "date of schedule"
        example: "2025-02-20 10:10:10"
      repeat_frequency:
        type: object
        properties:
          quantity: 
            type: string
            example:  1
          unit_of_frequency:
            description: "This can be Day, Week, Month, Year"
            type: string
            example: Month
 
  ScanInsights:
    title: Scanner Response DTO
    type: object
    properties:
      severity_counts:
        type: "object"
        description: "Counts of vulnerabilities by severity level."
        properties:
          critical:
            type: "integer"
            description: "Number of critical vulnerabilities."
            example: 1
          high:
            type: "integer"
            description: "Number of high vulnerabilities."
            example: 2
          medium:
            type: "integer"
            description: "Number of medium vulnerabilities."
            example: 10
          low:
            type: "integer"
            description: "Number of low vulnerabilities."
            example: 3
      severity_per_type:
        type: "object"
        description: "Dynamic mapping of vulnerability types to their counts."
        additionalProperties:
          type: "integer"
        example:
          RCE: 4
          "SQL Injection": 3
          XSS: 2
          "Open Port": 1
      total_vulnerabilities:
        type: "integer"
        description: "Total number of vulnerabilities in the scan."
        example: 16
      vulnerability_variation:
        type: "integer"
        description: "Difference in the total number of vulnerabilities since the last scan. Can be zero, positive, or negative."
        example: -2
      protection_score:
        type: "number"
        format: "float"
        description: "Protection score as a float between 0 and 1."
        example: 0.85
      protection_score_variation:
        type: "number"
        format: "float"
        description: "Variation since the host's last scan protection score"
        example: -0.02

      metadata:
        type: "object"
        description: "Metadata about the scan."
        properties:
          scan_id: 
            type: "string"
            description: "The uuid of the scan in string format"
            example: "7b918160-61b4-4c8d-a7bc-40231cbfa59f"
          host_alias:
            type: "string"
            description: "Alias of the scanned host."
            example: "example.com"
          scan_date:
            type: "string"
            format: "date-time"
            description: "Date and time of the scan in ISO 8601 format."
            example: "2025-01-27T14:45:00Z"
  ScanRequest:
    title: Scan
    type: object
    properties:
      host_id:
        type: integer
      schedule_at:
        type: string
      repeat_frequency:
        type: object
        properties:
          quantity:
            type: integer
            example: 1
          unit_of_frequency:
            type: string
            description: possible values are day, week, month, and year
            example: day
  ScanSummary:
    title: Scan Summary Response
    type: object
    properties:
      scan_id:
        type: string
        description: The unique identifier of the scan.
        example: "7136aa73-0291-48d9-99c3-c2dfb072c589"
      scan_date:
        type: string
        description: The date and time when the scan was initiated, in ISO 8601 format.
        example: "2025-01-29T13:33:37.007298Z"
      host:
        type: string
        description: The name of the host or target system that was scanned.
        example: "altoro"
      vulnerabilities:
        type: integer
        description: The total number of vulnerabilities detected during the scan.
        example: 0
      severities:
        type: object
        properties:
          critical:
            type: integer
            description: The number of critical vulnerabilities detected.
            example: 0
          high:
            type: integer
            description: The number of high-severity vulnerabilities detected.
            example: 0
          medium:
            type: integer
            description: The number of medium-severity vulnerabilities detected.
            example: 0
          low:
            type: integer
            description: The number of low-severity vulnerabilities detected.
            example: 0
      duration:
        type: number
        format: float
        description: The total duration of the scan in seconds, including any idle or wait times.
        example: 63873754417.0073
      status:
        type: string
        description: The current status of the scan. Possible values include "Pending", "Completed", "Cancelled", or "Failed".
        example: "Pending"
        
  ScanScheduleResponse:
    title: Scan Schedule Response
    type: object
    properties:
      id:
        type: string
        description: An integer value
        example: 1
      created_date:
        type: string
        description: The date and time when the scan schedule.
        example: "2025-01-29T13:33:37.007298Z"
      host:
        type: string
        description: The name of the host or target system that was scanned.
        example: "altoro"
      frequency:
        type: string
        description: quantity of given period name
        example: "Every ten days"
      scheduled_date:
        type: string
        description: The date and time of the next scan schedule.
        example: "2025-01-29T13:33:37.007298Z"

 
  CredentialHostPut:
    type: object
    properties:
      id:
        type: string
      username:
        type: string
      password:
        type: string
        
  CredentialHostPost:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
        
  CredentialHostResponse:
    type: object
    properties:
      id:
        type: string
      host_id:
        type: string
      username:
        type: string
      password:
        type: string
  RapporteurHost:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      is_principal:
        type: boolean
  HostRequest:
    type: object
    properties:
      value: 
        type: string
      name:
        type: string
      value_type:
        type: string
      credentials:
        type: array
        items:
           $ref: '#/definitions/CredentialHostPost'
      rapporteurs:
        type: array
        items:
           $ref: '#/definitions/RapporteurHost'
  HostRequestPut:
    type: object
    properties:
      value: 
        type: string
      name:
        type: string
      value_type:
        type: string
      credentials:
        type: array
        items:
           $ref: '#/definitions/CredentialHostPut'
      rapporteurs:
        type: array
        items:
           $ref: '#/definitions/RapporteurHost'
  HostResponse:
    type: object
    properties:
      id:
        type: string
      
      updated_at:
        type: string
      created_at: 
        type: string
      name: 
        type: string
      domain:
        type: string
      ip:
        type: string
      credentials:
        type: array
        items:
           $ref: '#/definitions/CredentialHostResponse'
      rapporteurs:
        type: array
        items:
           $ref: '#/definitions/RapporteurHost'

  ScanVulnerabilitySummaryResponse:
    type: object
    properties:
      scan_id:
        type: string
        description: ID of the scan.
        x-example: "e7991601-e3ea-4d7f-846d-1546e1d129dd"
      domain:
        type: string
        description: Domain name of the scanned target.
        x-example: "google.com"
      general_summary:
        $ref: '#/definitions/GeneralSummary'
      vulnerabilities_by_category:
        $ref: '#/definitions/VulnerabilitiesByCategory'
      vulnerability_trends:
        $ref: '#/definitions/VulnerabilityTrends'
    example:
      scan_id: "e7991601-e3ea-4d7f-846d-1546e1d129dd"
      domain: "google.com"
      general_summary:
        total_vulnerabilities: 40
        severity_counts:
          Critical: 10
          High: 10
          Medium: 10
          Low: 10
      vulnerabilities_by_category:
        category_data:
          - category: "XSS"
            count: 15
          - category: "SQL Injection"
            count: 20
          - category: "CSRF"
            count: 7
      vulnerability_trends:
        time_periods:
          - time_period: "Jan"
            vulnerability_count: 25 
          - time_period: "Feb"
            vulnerability_count: 30
          - time_period: "Mar"
            vulnerability_count: 40
        average_vulnerability_count: 65.4

  GeneralSummary:
    type: object
    properties:
      total_vulnerabilities:
        type: integer
        description: Total number of vulnerabilities found in the scan.
        x-example: 40
      severity_counts:
        $ref: '#/definitions/SeverityCounts'

  SeverityCounts:
    type: object
    properties:
      critical:
        type: integer
        description: Count of Critical severity vulnerabilities.
        x-example: 10
      high:
        type: integer
        description: Count of High severity vulnerabilities.
        x-example: 10
      medium:
        type: integer
        description: Count of Medium severity vulnerabilities.
        x-example: 10
      low:
        type: integer
        description: Count of Low severity vulnerabilities.
        x-example: 10

  VulnerabilitiesByCategory:
    type: object
    properties:
      category_data:
        type: array
        items: 
          $ref: '#/definitions/CategoryVulnerabilityData'
        description: Array of vulnerability category data, each item containing category name and count.

  CategoryVulnerabilityData:
    type: object
    properties:
      category:
        type: string
        description: Name of the vulnerability category.
        x-example: "XSS"
      count:
        type: integer
        description: Number of vulnerabilities in this category.
        x-example: 15



  VulnerabilityTrends:
    type: object
    properties:
      time_periods:
        type: array
        items:
          $ref: '#/definitions/TimePeriodData'
        description: Array of time period labels for the trend data, each item containing time_period and count.
      vulnerability_counts:
        type: array
        items:
          type: integer
        description: Array of vulnerability counts corresponding to each time period.
        x-example: [25, 30, 40, 35, 50, 60, 90, 80, 70, 75, 85, 95]
      average_vulnerability_count:
        type: number
        format: float
        description: Average vulnerability count over the selected time period (optional).
        x-example: 65.4

  TimePeriodData:
    type: object
    properties:
      time_period:
        type: string
        description: Time period of the trend dat 
        x-example: "Jan"
      count:
        type: integer
        description: Number of vulnerabilities found in this time period.
        x-example: 15
  ReportResponse:
    type: object
    properties:
      scan_id:
        type: string
        description: The UUID of the scan associated to the report in string format.
        example: "7b918160-61b4-4c8d-a7bc-40231cbfa59f"
      domain:
        type: string
        description: The domain name of the report.
        example: "Google.com"
      ip:
        type: string
        description: The IP address associated with the domain.
        example: "192.168.0.1"
      scan_date:
        type: string
        description: The date and time when the scan was initiated, in ISO 8601 format.
        example: "2025-01-29T13:33:37.007298Z"
      total_severities:
        type: integer
        description: The total number of severities found in the scan.
        example: 40
      comment_status:
        type: string
        description: The current comment status of the report.
        enum:
          - "PENDING"
          - "NEW COMMENT"
          - "CRITICAL"
        example: "PENDING"
  ScoreCardTrendResponse:
    type: object
    properties:
      alias:
        type: string
        description: The host's alias.
        example: "Ovofinance 2"
      oldest_score:
        type: number
        x-nullable: true
        description: Oldest protection score within the date range, if any. Null if no scan in range.
        example: 0.50
      latest_score:
        type: number
        description: Latest protection score within the date range, if any. Null if no scan in range.
        x-nullable: true
        example: 0.60
      latest_score_grade:
        type: string
        description: Grade associated with the latest score (A, B, C, D, F), if latest score exists. Null if no scan in range.
        x-nullable: true
        example: "A"
  ScanResponseCreation:
    type: object
    properties:
      id: 
        type: string
      tenant_id: 
        type: string
      operator_id: 
        type: string
      host_id: 
        type: integer
      target: 
        type: object
        properties:
          alias:
            type: string
          value: 
            type: string
          type: 
            type: string

      created_at: 
        type: string
      updated_at: 
        type: string
      started_at: 
        type: string
      ended_at:
        type: string
      status: 
        type: string
  TenantDashboardData:
    type: object
    properties:
      overall_security_posture:
        $ref: '#/definitions/OverallSecurityPostureData'
      host_severity_heat_map:
        type: array
        items:
          $ref: '#/definitions/HostAliasSeverityCountPair'
      vulnerability_trends:
        type: array
        items:
          $ref: '#/definitions/ServiceTimePeriod'
      last_scan:
        $ref: '#/definitions/LastScanData'
      hosts_with_greatest_vulnerabilities:
        type: array
        items:
          $ref: '#/definitions/HostAliasVulnerabilityPair'
  OverallSecurityPostureData:
    type: object
    properties:
      score:
        type: number
        format: float
        description: Overall security score.
      variation:
        type: number
        format: float
        description: Variation in security score.
  HostAliasSeverityCountPair:
    type: object
    properties:
      alias:
        type: string
        description: Alias of the host
      severity_count:
        $ref: '#/definitions/SeverityCounts'
  ServiceTimePeriod:
    type: object
    properties:
      time_period:
        type: string
        description: Time period in string format
      vulnerability_count:
        type: number
        description: Number of vulnerabilities found in said time period.
  LastScanData:
    type: object
    properties:
      host_alias:
        type: string
        description: Last scan's host alias.
      total_vulnerabilities:
        type: integer
        description: Total vulnerabilities found in the last scan.
      total_vulnerabilities_variation:
        type: integer
        description: Variation in total vulnerabilities compared to the previous scan.
      severity_counts:
        $ref: '#/definitions/SeverityCounts'
      scan_date:
        type: string
        format: date-time
        description: Date and time of the last scan.
  HostAliasVulnerabilityPair:
    type: object
    properties:
      alias:
        type: string
        description: Alias of the host
      vulnerability_count:
        type: number
        description: Count of vulnerabilities found for the host.
